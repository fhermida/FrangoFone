@model FrangoFone.Domain.ClienteSet

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>ClienteSet</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", @maxlength = "30" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sobrenone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Sobrenone, new { htmlAttributes = new { @class = "form-control", @maxlength = "30" } })
                @Html.ValidationMessageFor(model => model.Sobrenone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CPF, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control", @maxlength = "11"} })  
                @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataNascimento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataNascimento, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.DataCadastro, htmlAttributes: new { @id = "DataCadastro", Value = DateTime.Now.ToString("s") })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ativo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.Ativo, htmlAttributes: new { @checked = true})
                    @Html.ValidationMessageFor(model => model.Ativo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script type="text/javascript">
    $(function () {
        $("#DataNascimento").inputmask("mask", { "mask": "99/99/9999" });

        $("#CPF").on("keyup Keydown",function () {

            $("#CPF").val(function (i, v) {

                if (/^[a-zA-Z0-9- ]*$/.test(v) == false) {
                    v = v.replace(v.substr(v.length - 1, 1), "");
                }

                if (!jQuery.isNumeric(v)) {
                    v = v.replace(v.substr(v.length - 1, 1), "");
                }

                return v;

            }).val();
        });
    });
</script>